vscodeではフォルダではなく、MQTT.code-workspaceを使用してワークスペースとして開くとコンテナ内のirisに疎通する。

Windows10 + VM(Ubuntu20.04)で動かす方法

$ ./setup.sh
$ docker-compose up -d
起動待ち
$ docker-compose exec iris iris session iris -U %SYS "##class(App.Installer).InitializeDocker()"
You have successfully initiated the MQTT exercise
Please take note of your topic top-level string: /Student_3987/acmeHospital/EKG/#
press enter to continue
$

UIを起動してアイテムを追加、値を変更を実施。
http://irishost/app.html

User Portalで監視。

補足
MQTTクライアント機能を直接使用する方法
$ docker-compose exec iris iris session iris
USER>set tSC=##class(%Net.MQTT.Client).%New("tcp://mqtt.eclipseprojects.io:1883")
USER>set tSC=m.Connect()
USER>set tSC=m.Subscribe("/Student_6832/acmeHospital/EKG/#")
USER>set tSC=m.Receive(.topic,.message)
USER>wriste
m=<OBJECT REFERENCE>[1@%Net.MQTT.Client]
message=184
topic="/Student_6832/acmeHospital/EKG/Patient-0"
USER>h
$

mosquitto clientで監視する方法。
mosquitto_pub -h "mqtt.eclipseprojects.io" -p 1883 -t /Student_3987/acmeHospital/EKG -m "abc"
mosquitto_sub -v -h "mqtt.eclipseprojects.io" -p 1883 -t /Student_3987/acmeHospital/EKG/#


PEXを使わずに.NETを呼び出す方法
USER>w $SYSTEM.external.getRemoteGateway("netgw",55556).new("System.DateTime",0).Now
2021-11-19 03:51:03.4967784

USER>Set gw=$SYSTEM.external.getRemoteGateway("netgw",55556)
USER>do gw.addToPath("/app/MyLibrary.dll")
USER>set proxy = gw.new("dc.MyLibrary")
USER>w proxy.GetNumber()
123